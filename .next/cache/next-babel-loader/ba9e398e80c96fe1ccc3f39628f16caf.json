{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Movies = function Movies(props) {\n  console.log(props.genres);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.genres.map(function (genre) {\n    return __jsx(\"li\", {\n      key: genre.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/movies/[id]\",\n      as: \"/movies/\".concat(genre.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    }, genre.name)));\n  }));\n};\n\nMovies.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            genres: data.genres\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js"],"names":["Link","fetch","Movies","props","console","log","genres","map","genre","id","name","getInitialProps","res","json","data","length"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,oBAAaD,KAAK,CAACC,EAAnB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CADJ,CADJ,CADc;AAAA,GAAjB,CADL,CADJ;AAWH,CAbD;;AAeAR,MAAM,CAACS,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHV,KAAK,yGADF;;AAAA;AACfW,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAIrBV,UAAAA,OAAO,CAACC,GAAR,qCAAyCS,IAAI,CAACC,MAA9C;AAJqB,2CAKd;AACHT,YAAAA,MAAM,EAAGQ,IAAI,CAACR;AADX,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAUA,eAAeJ,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Movies = (props) => {\n    console.log(props.genres)\n    return(\n        <div>\n            {props.genres.map((genre) => (\n                <li key={genre.id}>\n                    <Link href=\"/movies/[id]\" as={`/movies/${genre.id}`}>\n                        <a>{genre.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </div>\n    )\n}\n\nMovies.getInitialProps = async function() {\n    const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`)\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return {\n        genres : data.genres\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}