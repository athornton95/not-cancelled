{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movie-genres/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar Movie = function Movie(props) {\n  console.log(props.movies);\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, props.movies.map(function (movie) {\n    return __jsx(\"li\", {\n      key: movie.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    }, movie.title), __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, movie.overview), __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, movie.vote_average, \"/10\"));\n  }));\n};\n\nMovie.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log(context);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=c7bd82b902b003f8df2703ae814169b5&with_genres=\".concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            movies: data.results\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movie-genres/[id].js"],"names":["fetch","Movie","props","console","log","movies","map","movie","id","title","overview","vote_average","getInitialProps","context","query","res","json","data","results"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,KAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,KAAK,CAACG,QAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAK,CAACI,YAAV,QAJJ,CADc;AAAA,GAAjB,CADD,CADJ;AAaC,CAfL;;AAkBAV,KAAK,CAACW,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACZL,UAAAA,EADY,GACLK,OAAO,CAACC,KADH,CACZN,EADY;AAEpBL,UAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AAFoB;AAAA,2CAGFb,KAAK,4GAAqGQ,EAArG,EAHH;;AAAA;AAGdO,UAAAA,GAHc;AAAA;AAAA,2CAIDA,GAAG,CAACC,IAAJ,EAJC;;AAAA;AAIdC,UAAAA,IAJc;AAAA,2CAMb;AAAEZ,YAAAA,MAAM,EAAEY,IAAI,CAACC;AAAf,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAejB,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nconst Movie = props => {\n    console.log(props.movies)\n    return(\n        <ul>\n        {props.movies.map((movie) => (\n            <li key={movie.id}>\n            {/* <Link href=\"/p/[id]\" as={`/p/${movie.id}`}> */}\n                <h2>{movie.title}</h2>\n                <a>{movie.overview}</a>\n                <a>{movie.vote_average}/10</a>\n            {/* </Link> */}\n            </li>\n        ))}\n        </ul>\n    )\n    }\n\n\nMovie.getInitialProps = async function(context) {\n    const { id } = context.query;\n    console.log(context);\n    const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=c7bd82b902b003f8df2703ae814169b5&with_genres=${id}`);\n    const data = await res.json();\n    \n    return { movies: data.results };\n    };\n    \nexport default Movie;"]},"metadata":{},"sourceType":"module"}