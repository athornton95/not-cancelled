{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/components/TrailFinder.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport UserInput from './UserInput';\nimport Link from 'next/link'; // import WeatherInfo from './WeatherInfo/WeatherInfo'\n\nclass TrailFinder extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"findGeoCode\", async formData => {\n      try {\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyCxC93pv465QlIoGBJEWgafUpZwTJ_5tPg`;\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json(); // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n\n        if (result.status === 200) {\n          this.setState({\n            lat: parsedResponse.results[0].geometry.location.lat,\n            lng: parsedResponse.results[0].geometry.location.lng,\n            city: formData.city,\n            state: formData.state,\n            minLength: formData.minLength,\n            maxLength: formData.maxLength,\n            difficulty: formData.difficulty\n          });\n        } // console.log(this.state)\n\n\n        this.findTrails();\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"findTrails\", async () => {\n      console.log(this.state.maxLength);\n\n      try {\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=${this.state.maxLength}&key=200465360-942e3fb792b81fa531e25b7484cbc0f9`;\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        console.log(searchURL);\n\n        if (result.status === 200) {\n          if (this.state.difficulty === '') {\n            this.setState({\n              trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n            });\n          } else {\n            this.setState({\n              trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n            });\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    this.state = {\n      lat: '',\n      lng: '',\n      city: '',\n      state: '',\n      trails: [],\n      minLength: '',\n      maxLength: '',\n      difficulty: ''\n    };\n  }\n\n  render(formData) {\n    console.log(this.state.trails);\n    const trailList = this.state.trails.map(trail => {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        key: \"trail.id\",\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, trail.name), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, trail.location)));\n    }); // console.log(`${trailList} trailLIST`);\n\n    return __jsx(\"div\", {\n      className: \"jsx-559184932\" + \" \" + \"trail-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-559184932\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-559184932\" + \" \" + 'userInput',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(UserInput, {\n      findGeoCode: this.findGeoCode,\n      findTrails: this.findTrails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"jsx-559184932\" + \" \" + 'trailList',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, trailList)), __jsx(_JSXStyle, {\n      id: \"559184932\",\n      __self: this\n    }, \".trail-container.jsx-559184932{display:grid;}.card.jsx-559184932{background-color:white;width:100%;border-radius:1rem;box-shadow:1px 4px 8px #050066;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4YW5kcmF0aG9ybnRvbi9HaXRodWIvT3V0c2lkZS9ub3QtY2FuY2VsbGVkL2NvbXBvbmVudHMvVHJhaWxGaW5kZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEY0QixBQUdzQyxBQUlVLGFBSDNCLFVBSWUsV0FDUSxtQkFDWSwrQkFDbkMiLCJmaWxlIjoiL1VzZXJzL2FsZXhhbmRyYXRob3JudG9uL0dpdGh1Yi9PdXRzaWRlL25vdC1jYW5jZWxsZWQvY29tcG9uZW50cy9UcmFpbEZpbmRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFVzZXJJbnB1dCBmcm9tICcuL1VzZXJJbnB1dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG4vLyBpbXBvcnQgV2VhdGhlckluZm8gZnJvbSAnLi9XZWF0aGVySW5mby9XZWF0aGVySW5mbydcblxuXG5jbGFzcyBUcmFpbEZpbmRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGxhdDogJycsXG4gICAgICAgICAgICBsbmc6ICcnLFxuICAgICAgICAgICAgY2l0eTogJycsXG4gICAgICAgICAgICBzdGF0ZTogJycsXG4gICAgICAgICAgICB0cmFpbHM6IFtdLFxuICAgICAgICAgICAgbWluTGVuZ3RoOiAnJyxcbiAgICAgICAgICAgIG1heExlbmd0aDogJycsXG4gICAgICAgICAgICBkaWZmaWN1bHR5OiAnJyxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZpbmRHZW9Db2RlID0gYXN5bmMgKGZvcm1EYXRhKSA9PiB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgY29uc3Qgc2VhcmNoVVJMID0gYGh0dHBzOi8vY29ycy1hbnl3aGVyZS5oZXJva3VhcHAuY29tL2h0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9nZW9jb2RlL2pzb24/YWRkcmVzcz0ke2Zvcm1EYXRhLmNpdHl9LCske2Zvcm1EYXRhLnN0YXRlfSZrZXk9QUl6YVN5Q3hDOTNwdjQ2NVFsSW9HQkpFV2dhZlVwWndUSl81dFBnYFxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChzZWFyY2hVUkwpXG4gICAgICAgIGNvbnN0IHBhcnNlZFJlc3BvbnNlID0gYXdhaXQgcmVzdWx0Lmpzb24oKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coYCR7cGFyc2VkUmVzcG9uc2V9IGlzIHRoZSBwYXJzZWQgcmVzcG9uc2UgZm9yIGZpbmRHZW9Db2RlYCk7XG4gICAgICAgIGlmKHJlc3VsdC5zdGF0dXMgPT09IDIwMCl7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBsYXQ6IHBhcnNlZFJlc3BvbnNlLnJlc3VsdHNbMF0uZ2VvbWV0cnkubG9jYXRpb24ubGF0LFxuICAgICAgICAgICAgICAgIGxuZzogcGFyc2VkUmVzcG9uc2UucmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbi5sbmcsXG4gICAgICAgICAgICAgICAgY2l0eTogZm9ybURhdGEuY2l0eSxcbiAgICAgICAgICAgICAgICBzdGF0ZTogZm9ybURhdGEuc3RhdGUsXG4gICAgICAgICAgICAgICAgbWluTGVuZ3RoOiBmb3JtRGF0YS5taW5MZW5ndGgsXG4gICAgICAgICAgICAgICAgbWF4TGVuZ3RoOiBmb3JtRGF0YS5tYXhMZW5ndGgsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogZm9ybURhdGEuZGlmZmljdWx0eVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXRlKVxuICAgICAgICB0aGlzLmZpbmRUcmFpbHMoKTtcbiAgICAgICAgfWNhdGNoKGVycil7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgIH1cbiAgICB9XG4gICAgZmluZFRyYWlscyA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zdGF0ZS5tYXhMZW5ndGgpXG4gICAgICAgIHRyeXtcbiAgICAgICAgY29uc3Qgc2VhcmNoVVJMID0gYGh0dHBzOi8vd3d3Lmhpa2luZ3Byb2plY3QuY29tL2RhdGEvZ2V0LXRyYWlscz9sYXQ9JHt0aGlzLnN0YXRlLmxhdH0mbG9uPSR7dGhpcy5zdGF0ZS5sbmd9Jm1pbkxlbmd0aD0ke3RoaXMuc3RhdGUubWluTGVuZ3RofSZtYXhEaXN0YW5jZT0ke3RoaXMuc3RhdGUubWF4TGVuZ3RofSZrZXk9MjAwNDY1MzYwLTk0MmUzZmI3OTJiODFmYTUzMWUyNWI3NDg0Y2JjMGY5YFxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChzZWFyY2hVUkwpO1xuICAgICAgICBjb25zdCBwYXJzZWRSZXNwb25zZSA9IGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHNlYXJjaFVSTCk7XG4gICAgICAgIGlmKHJlc3VsdC5zdGF0dXMgPT09IDIwMCl7XG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLmRpZmZpY3VsdHkgPT09ICcnKXtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgdHJhaWxzOiBwYXJzZWRSZXNwb25zZS50cmFpbHMuZmlsdGVyKHRyYWlscyA9PiB0cmFpbHMubGVuZ3RoIDwgdGhpcy5zdGF0ZS5tYXhMZW5ndGgpXG4gICAgICAgICAgICAgICAgfSkgXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICB0cmFpbHM6IHBhcnNlZFJlc3BvbnNlLnRyYWlscy5maWx0ZXIodHJhaWxzID0+IHRyYWlscy5sZW5ndGggPCB0aGlzLnN0YXRlLm1heExlbmd0aCAmJiB0cmFpbHMuZGlmZmljdWx0eSA9PT0gdGhpcy5zdGF0ZS5kaWZmaWN1bHR5KVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgfWNhdGNoKGVycil7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKGZvcm1EYXRhKXtcbiAgICBjb25zb2xlLmxvZyh0aGlzLnN0YXRlLnRyYWlscyk7XG4gICAgICAgIGNvbnN0IHRyYWlsTGlzdCA9IHRoaXMuc3RhdGUudHJhaWxzLm1hcCgodHJhaWwpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT1cInRyYWlsLmlkXCIgY2xhc3NOYW1lPVwiY2FyZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt0cmFpbC5uYW1lfTwvaDQ+IFxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3RyYWlsLmxvY2F0aW9ufTwvcD4gXG4gICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAvLyBjb25zb2xlLmxvZyhgJHt0cmFpbExpc3R9IHRyYWlsTElTVGApO1xuICAgICAgICByZXR1cm4oXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRyYWlsLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gJ3VzZXJJbnB1dCc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VXNlcklucHV0IGZpbmRHZW9Db2RlID0ge3RoaXMuZmluZEdlb0NvZGV9IGZpbmRUcmFpbHM9e3RoaXMuZmluZFRyYWlsc30vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSAndHJhaWxMaXN0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdHJhaWxMaXN0IH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgICAgICAudHJhaWwtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuY2FyZCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCA0cHggOHB4ICMwNTAwNjY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBUcmFpbEZpbmRlcjsiXX0= */\\n/*@ sourceURL=/Users/alexandrathornton/Github/Outside/not-cancelled/components/TrailFinder.js */\"));\n  }\n\n}\n\nexport default TrailFinder;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/components/TrailFinder.js"],"names":["React","Component","UserInput","Link","TrailFinder","constructor","formData","searchURL","city","state","result","fetch","parsedResponse","json","status","setState","lat","results","geometry","location","lng","minLength","maxLength","difficulty","findTrails","err","console","log","trails","filter","length","render","trailList","map","trail","name","findGeoCode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAGA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,GAAE;AACT;;AADS,yCAcC,MAAOC,QAAP,IAAoB;AAC9B,UAAG;AACH,cAAMC,SAAS,GAAI,iGAAgGD,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,KAAM,8CAApJ;AACA,cAAMC,MAAM,GAAG,MAAMC,KAAK,CAACJ,SAAD,CAA1B;AACA,cAAMK,cAAc,GAAG,MAAMF,MAAM,CAACG,IAAP,EAA7B,CAHG,CAIH;;AACA,YAAGH,MAAM,CAACI,MAAP,KAAkB,GAArB,EAAyB;AACrB,eAAKC,QAAL,CAAc;AACVC,YAAAA,GAAG,EAAEJ,cAAc,CAACK,OAAf,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC,QAAnC,CAA4CH,GADvC;AAEVI,YAAAA,GAAG,EAAER,cAAc,CAACK,OAAf,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC,QAAnC,CAA4CC,GAFvC;AAGVZ,YAAAA,IAAI,EAAEF,QAAQ,CAACE,IAHL;AAIVC,YAAAA,KAAK,EAAEH,QAAQ,CAACG,KAJN;AAKVY,YAAAA,SAAS,EAAEf,QAAQ,CAACe,SALV;AAMVC,YAAAA,SAAS,EAAEhB,QAAQ,CAACgB,SANV;AAOVC,YAAAA,UAAU,EAAEjB,QAAQ,CAACiB;AAPX,WAAd;AASH,SAfE,CAgBH;;;AACA,aAAKC,UAAL;AACC,OAlBD,CAkBC,OAAMC,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KApCY;;AAAA,wCAqCA,YAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWa,SAAvB;;AACA,UAAG;AACH,cAAMf,SAAS,GAAI,qDAAoD,KAAKE,KAAL,CAAWO,GAAI,QAAO,KAAKP,KAAL,CAAWW,GAAI,cAAa,KAAKX,KAAL,CAAWY,SAAU,gBAAe,KAAKZ,KAAL,CAAWa,SAAU,iDAAlL;AACA,cAAMZ,MAAM,GAAG,MAAMC,KAAK,CAACJ,SAAD,CAA1B;AACA,cAAMK,cAAc,GAAG,MAAMF,MAAM,CAACG,IAAP,EAA7B;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;;AACA,YAAGG,MAAM,CAACI,MAAP,KAAkB,GAArB,EAAyB;AACrB,cAAG,KAAKL,KAAL,CAAWc,UAAX,KAA0B,EAA7B,EAAgC;AAC5B,iBAAKR,QAAL,CAAc;AACVa,cAAAA,MAAM,EAAEhB,cAAc,CAACgB,MAAf,CAAsBC,MAAtB,CAA6BD,MAAM,IAAIA,MAAM,CAACE,MAAP,GAAgB,KAAKrB,KAAL,CAAWa,SAAlE;AADE,aAAd;AAGH,WAJD,MAIO;AACH,iBAAKP,QAAL,CAAc;AACVa,cAAAA,MAAM,EAAEhB,cAAc,CAACgB,MAAf,CAAsBC,MAAtB,CAA6BD,MAAM,IAAIA,MAAM,CAACE,MAAP,GAAgB,KAAKrB,KAAL,CAAWa,SAA3B,IAAwCM,MAAM,CAACL,UAAP,KAAsB,KAAKd,KAAL,CAAWc,UAAhH;AADE,aAAd;AAGH;AACJ;AACA,OAhBD,CAgBC,OAAME,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KA1DY;;AAET,SAAKhB,KAAL,GAAa;AACTO,MAAAA,GAAG,EAAE,EADI;AAETI,MAAAA,GAAG,EAAE,EAFI;AAGTZ,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTmB,MAAAA,MAAM,EAAE,EALC;AAMTP,MAAAA,SAAS,EAAE,EANF;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,UAAU,EAAE;AARH,KAAb;AAUH;;AAgDDQ,EAAAA,MAAM,CAACzB,QAAD,EAAU;AAChBoB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWmB,MAAvB;AACI,UAAMI,SAAS,GAAG,KAAKvB,KAAL,CAAWmB,MAAX,CAAkBK,GAAlB,CAAuBC,KAAD,IAAW;AAC/C,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,GAAG,EAAC,UAAT;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,KAAK,CAACC,IAAX,CADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,KAAK,CAACf,QAAV,CAFL,CADH,CADJ;AAQH,KATiB,CAAlB,CAFY,CAYhB;;AACI,WACI;AAAA,yCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,yCAAiB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,WAAW,EAAI,KAAKiB,WAA/B;AAA4C,MAAA,UAAU,EAAE,KAAKZ,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA,yCAAiB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMQ,SADN,CAJJ,CADJ;AAAA;AAAA;AAAA,wxLADJ;AAwBH;;AAlG+B;;AAsGpC,eAAe5B,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport UserInput from './UserInput';\nimport Link from 'next/link'\n// import WeatherInfo from './WeatherInfo/WeatherInfo'\n\n\nclass TrailFinder extends Component {\n    constructor(){\n        super();\n        this.state = {\n            lat: '',\n            lng: '',\n            city: '',\n            state: '',\n            trails: [],\n            minLength: '',\n            maxLength: '',\n            difficulty: '',\n        }\n    }\n\n    findGeoCode = async (formData) => {\n        try{\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyCxC93pv465QlIoGBJEWgafUpZwTJ_5tPg`\n        const result = await fetch(searchURL)\n        const parsedResponse = await result.json();\n        // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n        if(result.status === 200){\n            this.setState({\n                lat: parsedResponse.results[0].geometry.location.lat,\n                lng: parsedResponse.results[0].geometry.location.lng,\n                city: formData.city,\n                state: formData.state,\n                minLength: formData.minLength,\n                maxLength: formData.maxLength,\n                difficulty: formData.difficulty\n            })\n        }\n        // console.log(this.state)\n        this.findTrails();\n        }catch(err){\n            console.log(err)\n        }\n    }\n    findTrails = async () => {\n        console.log(this.state.maxLength)\n        try{\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=${this.state.maxLength}&key=200465360-942e3fb792b81fa531e25b7484cbc0f9`\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        console.log(searchURL);\n        if(result.status === 200){\n            if(this.state.difficulty === ''){\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n                }) \n            } else {\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n                })\n            }\n        }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    render(formData){\n    console.log(this.state.trails);\n        const trailList = this.state.trails.map((trail) => {\n            return (\n                <div>\n                   <div key=\"trail.id\" className=\"card\">\n                        <h4>{trail.name}</h4> \n                        <p>{trail.location}</p> \n                     </div>\n                </div>\n            )\n        })\n    // console.log(`${trailList} trailLIST`);\n        return(\n            <div className=\"trail-container\">\n                <div>\n                    <div className = 'userInput'>\n                        <UserInput findGeoCode = {this.findGeoCode} findTrails={this.findTrails}/>\n                    </div>\n                    <div className = 'trailList'>\n                        { trailList }\n                    </div>\n                </div>\n                <style jsx>{`\n                    .trail-container {\n                        display: grid;\n                    }\n\n                    .card {\n                        background-color: white;\n                        width: 100%;\n                        border-radius: 1rem;\n                        box-shadow: 1px 4px 8px #050066;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\n\nexport default TrailFinder;"]},"metadata":{},"sourceType":"module"}