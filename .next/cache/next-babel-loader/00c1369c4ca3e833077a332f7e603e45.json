{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movie-genres/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core';\nimport Nav from '../../components/Nav';\nimport { withRouter } from 'next/router';\n\nfunction Page({\n  router\n}) {\n  //   return <p>{router.pathname}</p>\n  console.log(router.pathname);\n}\n\nPage();\n\nconst Movie = props => {\n  const hoverColor = '#08009c';\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]) + \" \" + \"content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]) + \" \" + \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]) + \" \" + \"list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.movies.map(movie => __jsx(\"li\", {\n    key: movie.id,\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]) + \" \" + \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]) + \" \" + \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, movie.title), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, movie.overview), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1307051785\", [hoverColor]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, movie.vote_average, \"/10\")))))), __jsx(_JSXStyle, {\n    id: \"1307051785\",\n    dynamic: [hoverColor],\n    __self: this\n  }, `li.__jsx-style-dynamic-selector{list-style:none;display:block;}.card.__jsx-style-dynamic-selector{background-color:white;width:100%;border-radius:1rem;box-shadow:1px 4px 8px #050066;}.card.__jsx-style-dynamic-selector:hover{-webkit-transform:translateY(-3px);-ms-transform:translateY(-3px);transform:translateY(-3px);}.card.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{border-bottom:1px solid;}.card-content.__jsx-style-dynamic-selector{margin:2rem;}.wrapper.__jsx-style-dynamic-selector{display:grid;max-width:100%;margin:2rem;}.content-container.__jsx-style-dynamic-selector{max-height:100%;background:linear-gradient(#e66465,#9198e5);position:relative;}.title-wrapper.__jsx-style-dynamic-selector{display:grid;margin:0 auto;width:70%;justify-items:center;text-align:center;position:absolute;left:50%;top:-15%;-webkit-transform:translate(-50%,50%);-ms-transform:translate(-50%,50%);transform:translate(-50%,50%);}.title.__jsx-style-dynamic-selector{color:white;opacity:1;font-size:2rem;text-shadow:2px 2px #e66465;}.subtitle.__jsx-style-dynamic-selector{color:white;font-size:1.5rem;opacity:.7;font-style:italic;}.list-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(4,1fr);grid-column-gap:1.5rem;grid-row-gap:1.5rem;width:100%;}.list-item.__jsx-style-dynamic-selector{margin:2rem 0;}.button-wrapper.__jsx-style-dynamic-selector{margin-top:1rem;}.global-button.__jsx-style-dynamic-selector{-webkit-text-decoration:none;text-decoration:none;padding:1rem 1.75rem;background-color:blue;color:white;border-radius:2rem;font-weight:700;box-shadow:1px 4px 8px #050066;margin:1rem 1rem;}.global-button.__jsx-style-dynamic-selector:hover{background-color:${hoverColor};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4YW5kcmF0aG9ybnRvbi9HaXRodWIvT3V0c2lkZS9ub3QtY2FuY2VsbGVkL3BhZ2VzL21vdmllLWdlbnJlcy9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDcUIsQUFHaUMsQUFJTyxBQU9JLEFBSUgsQUFJWixBQUlDLEFBTUcsQUFLSCxBQVdELEFBT0EsQUFNQyxBQVFDLEFBSUUsQUFHSyxBQVV5QixZQS9EbEQsQUEwQmMsQUFPTyxDQTdCRixBQVdELEFBd0JzQixDQVF4QyxFQWxFa0IsQUE2QitCLEFBeUNqRCxNQXhCbUIsQ0ExQ0osQ0FXZixHQW9CYyxDQVhFLENBNkJELENBcERmLElBSXVCLEdBK0JFLEFBV08sR0F0QmhDLEFBNkJzQixNQTZCdEIsR0F4QjJCLENBY0YsR0FuRVUsS0ErQmIsQUFrQnRCLEVBekJzQixLQWtCdEIsTUEwQjBCLENBZEYsSUF0QkYsRUFQdEIsTUF4QkEsUUFzRGUsQ0FsRGYsQUFnRWdCLENBcENILFNBQ0EsQUFzQmIsRUFjc0IsT0FuQ2EsWUFvQ2YsZ0JBQ2UsK0JBQ2QsaUJBQ3JCLDBCQXRDQSIsImZpbGUiOiIvVXNlcnMvYWxleGFuZHJhdGhvcm50b24vR2l0aHViL091dHNpZGUvbm90LWNhbmNlbGxlZC9wYWdlcy9tb3ZpZS1nZW5yZXMvW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IHsgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBOYXYgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9OYXYnO1xuaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xuXG5mdW5jdGlvbiBQYWdlKHsgcm91dGVyIH0pIHtcbi8vICAgcmV0dXJuIDxwPntyb3V0ZXIucGF0aG5hbWV9PC9wPlxuICBjb25zb2xlLmxvZyhyb3V0ZXIucGF0aG5hbWUpO1xufVxuXG5QYWdlKCk7XG5cbmNvbnN0IE1vdmllID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IGhvdmVyQ29sb3IgPSAnIzA4MDA5Yyc7XG4gICAgcmV0dXJuKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICAgIDxOYXYvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBwZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0LWNvbnRhaW5lclwiPlxuICAgICAgIFxuICAgICAgICAgICAge3Byb3BzLm1vdmllcy5tYXAoKG1vdmllKSA9PiAoXG4gICAgICAgICAgICAgICAgPGxpIGtleT17bW92aWUuaWR9IGNsYXNzTmFtZT1cImNhcmRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMj57bW92aWUudGl0bGV9PC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPnttb3ZpZS5vdmVydmlld308L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD57bW92aWUudm90ZV9hdmVyYWdlfS8xMDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKSl9XG5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuY2FyZCB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAxcHggNHB4IDhweCAjMDUwMDY2O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuY2FyZDpob3ZlciB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zcHgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuY2FyZCBoMiB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuY2FyZC1jb250ZW50IHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC53cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5jb250ZW50LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI2U2NjQ2NSwgIzkxOThlNSk7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnRpdGxlLXdyYXBwZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgdG9wOiAtMTUlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDUwJSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAjZTY2NDY1O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuc3VidGl0bGUge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNztcbiAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAubGlzdC1jb250YWluZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCg0LCAxZnIpO1xuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uLWdhcDogMS41cmVtO1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LWdhcDogMS41cmVtO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubGlzdC1pdGVtIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmJ1dHRvbi13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmdsb2JhbC1idXR0b24ge1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDEuNzVyZW07XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1cyAycmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDRweCA4cHggIzA1MDA2NjtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFyZW0gMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5nbG9iYWwtYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2hvdmVyQ29sb3J9O1xuICAgICAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxuICAgIH1cblxuXG5Nb3ZpZS5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0KSB7XG4gICAgY29uc3QgeyBpZCB9ID0gY29udGV4dC5xdWVyeTtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9kaXNjb3Zlci9tb3ZpZT9hcGlfa2V5PWM3YmQ4MmI5MDJiMDAzZjhkZjI3MDNhZTgxNDE2OWI1JndpdGhfZ2VucmVzPSR7aWR9YCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgXG4gICAgcmV0dXJuIHsgbW92aWVzOiBkYXRhLnJlc3VsdHN9O1xuICAgIH07XG4gICAgXG5leHBvcnQgZGVmYXVsdCBNb3ZpZTsiXX0= */\n/*@ sourceURL=/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movie-genres/[id].js */`));\n};\n\nMovie.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=c7bd82b902b003f8df2703ae814169b5&with_genres=${id}`);\n  const data = await res.json();\n  return {\n    movies: data.results\n  };\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movie-genres/[id].js"],"names":["fetch","css","jsx","Nav","withRouter","Page","router","console","log","pathname","Movie","props","hoverColor","movies","map","movie","id","title","overview","vote_average","getInitialProps","context","query","res","data","json","results"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA0B;AAC1B;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,QAAnB;AACD;;AAEDJ,IAAI;;AAEJ,MAAMK,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAMC,UAAU,GAAG,SAAnB;AACA,SACI;AAAA,kDAsG4BA,UAtG5B,aAAe,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA,kDAoG4BA,UApG5B,aAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA,kDAmG4BA,UAnG5B,aAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IACd;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA,kDAgGoBJ,UAhGpB,aAA6B,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDA+FgBA,UA/FhB,aAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDA8FYA,UA9FZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAK,CAACE,KAAX,CADJ,EAEI;AAAA,kDA6FYL,UA7FZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACG,QAAV,CAFJ,EAGI;AAAA,kDA4FYN,UA5FZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACI,YAAV,QAHJ,CADJ,CADH,CAFL,CADA,CAFA;AAAA;AAAA,cAsG4BP,UAtG5B;AAAA;AAAA,yqDAsG4BA,UAtG5B;;kGAAA,EADJ;AA4GC,CA9GL;;AAiHAF,KAAK,CAACU,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC5C,QAAM;AAAEL,IAAAA;AAAF,MAASK,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMvB,KAAK,CAAE,oGAAmGgB,EAAG,EAAxG,CAAvB;AACA,QAAMQ,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AAAEZ,IAAAA,MAAM,EAAEW,IAAI,CAACE;AAAf,GAAP;AACC,CANL;;AAQA,eAAehB,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core';\nimport Nav from '../../components/Nav';\nimport { withRouter } from 'next/router'\n\nfunction Page({ router }) {\n//   return <p>{router.pathname}</p>\n  console.log(router.pathname);\n}\n\nPage();\n\nconst Movie = props => {\n    const hoverColor = '#08009c';\n    return(\n        <div className=\"content-container\">\n        <Nav/>\n        <div className=\"wrapper\">\n        <div className=\"list-container\">\n       \n            {props.movies.map((movie) => (\n                <li key={movie.id} className=\"card\">\n                    <div className=\"card-content\">\n                        <h2>{movie.title}</h2>\n                        <p>{movie.overview}</p>\n                        <p>{movie.vote_average}/10</p>\n                    </div>\n                </li>\n        ))}\n\n        </div>\n        </div>\n         <style jsx>{`\n            li {\n                list-style: none;\n                display: block;\n            }\n            .card {\n                background-color: white;\n                width: 100%;\n                border-radius: 1rem;\n                box-shadow: 1px 4px 8px #050066;\n            }\n\n            .card:hover {\n                transform: translateY(-3px);\n            }\n\n            .card h2 {\n                border-bottom: 1px solid;\n            }\n\n            .card-content {\n                margin: 2rem;\n            }\n\n            .wrapper {\n                display: grid;\n                max-width: 100%;\n                margin: 2rem;\n            }\n\n            .content-container {\n                max-height: 100%;\n                background: linear-gradient(#e66465, #9198e5);\n                position: relative;\n            }\n            .title-wrapper {\n                display: grid;\n                margin: 0 auto;\n                width: 70%;\n                justify-items: center;\n                text-align: center;\n                position: absolute;\n                left: 50%;\n                top: -15%;\n                transform: translate(-50%, 50%);\n            }\n            .title {\n                color: white;\n                opacity: 1;\n                font-size: 2rem;\n                text-shadow: 2px 2px #e66465;\n            }\n\n            .subtitle {\n                color: white;\n                font-size: 1.5rem;\n                opacity: .7;\n                font-style: italic;\n            }\n            .list-container {\n                display: grid;\n                grid-template-columns:repeat(4, 1fr);\n                grid-column-gap: 1.5rem;\n                grid-row-gap: 1.5rem;\n                width: 100%;\n            }\n\n            .list-item {\n                margin: 2rem 0;\n            }\n\n            .button-wrapper {\n                margin-top: 1rem;\n            }\n            .global-button {\n                text-decoration: none;\n                padding: 1rem 1.75rem;\n                background-color: blue;\n                color: white;\n                border-radius 2rem;\n                font-weight: 700;\n                box-shadow: 1px 4px 8px #050066;\n                margin: 1rem 1rem;\n            }\n            .global-button:hover {\n                background-color: ${hoverColor};\n            }\n    `}</style>\n        </div>\n    )\n    }\n\n\nMovie.getInitialProps = async function(context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=c7bd82b902b003f8df2703ae814169b5&with_genres=${id}`);\n    const data = await res.json();\n    \n    return { movies: data.results};\n    };\n    \nexport default Movie;"]},"metadata":{},"sourceType":"module"}