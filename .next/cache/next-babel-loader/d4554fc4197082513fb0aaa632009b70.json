{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core';\nimport Nav from '../components/Nav';\n\nconst Movies = props => {\n  const hoverColor = '#08009c';\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"title-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Want to stay inside? Have a movie day\"), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Choose a genre to get started\"), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.genres.map(genre => __jsx(\"li\", {\n    key: genre.id,\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/movie-genres/[id]\",\n    as: `/movie-genres/${genre.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: _JSXStyle.dynamic([[\"3622812002\", [hoverColor]]]) + \" \" + \"global-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, genre.name)))))), __jsx(_JSXStyle, {\n    id: \"3622812002\",\n    dynamic: [hoverColor],\n    __self: this\n  }, `li.__jsx-style-dynamic-selector{list-style:none;display:block;}.content-container.__jsx-style-dynamic-selector{height:100vh;background:linear-gradient(#e66465,#9198e5);position:relative;}.title-wrapper.__jsx-style-dynamic-selector{display:grid;margin:0 auto;width:70%;justify-items:center;text-align:center;position:absolute;left:50%;top:-15%;-webkit-transform:translate(-50%,50%);-ms-transform:translate(-50%,50%);transform:translate(-50%,50%);}.title.__jsx-style-dynamic-selector{color:white;opacity:1;font-size:2rem;text-shadow:2px 2px #e66465;}.subtitle.__jsx-style-dynamic-selector{color:white;font-size:1.5rem;opacity:.7;font-style:italic;}.list-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(5,1fr);grid-column-gap:1rem;width:100%;}.list-item.__jsx-style-dynamic-selector{margin:2rem 0;}.button-wrapper.__jsx-style-dynamic-selector{margin-top:1rem;}.global-button.__jsx-style-dynamic-selector{-webkit-text-decoration:none;text-decoration:none;padding:1rem 1.75rem;background-color:blue;color:white;border-radius:2rem;font-weight:700;box-shadow:1px 4px 8px #050066;margin:1rem 1rem;}.global-button.__jsx-style-dynamic-selector:hover{background-color:${hoverColor};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4YW5kcmF0aG9ybnRvbi9HaXRodWIvT3V0c2lkZS9ub3QtY2FuY2VsbGVkL3BhZ2VzL21vdmllcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Qm9CLEFBR2lDLEFBSUgsQUFLQSxBQVdELEFBT0EsQUFNQyxBQU9DLEFBSUUsQUFHSyxBQVV5QixZQXBDcEMsQUFPTyxDQXZCNEIsQUFLL0IsQUF3QnNCLENBT3hDLEVBeENrQixBQTRDbEIsTUF2Qm1CLEtBWEwsRUFrQkMsQ0EzQmYsT0FVeUIsQUFXTyxHQU9WLE1BNEJ0QixHQXZCeUIsQ0FhQSxPQTFDSCxDQU9BLEFBa0J0QixPQVBBLEtBWWUsQ0FhVyxJQTFDMUIsQ0FPc0IsS0F1QnRCLFlBYWdCLENBbkNILFNBQ0EsRUFtQ1MsT0FsQ2EsWUFtQ2YsZ0JBQ2UsK0JBQ2QsaUJBQ3JCLDBCQXJDQSIsImZpbGUiOiIvVXNlcnMvYWxleGFuZHJhdGhvcm50b24vR2l0aHViL091dHNpZGUvbm90LWNhbmNlbGxlZC9wYWdlcy9tb3ZpZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgeyBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgTmF2IGZyb20gJy4uL2NvbXBvbmVudHMvTmF2JztcblxuY29uc3QgTW92aWVzID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgaG92ZXJDb2xvciA9ICcjMDgwMDljJztcbiAgICByZXR1cm4oXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxOYXYvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZS13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+V2FudCB0byBzdGF5IGluc2lkZT8gSGF2ZSBhIG1vdmllIGRheTwvaDE+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwic3VidGl0bGVcIj5DaG9vc2UgYSBnZW5yZSB0byBnZXQgc3RhcnRlZDwvcD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIHtwcm9wcy5nZW5yZXMubWFwKChnZW5yZSkgPT4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e2dlbnJlLmlkfSBjbGFzc05hbWU9XCJsaXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9tb3ZpZS1nZW5yZXMvW2lkXVwiIGFzPXtgL21vdmllLWdlbnJlcy8ke2dlbnJlLmlkfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiZ2xvYmFsLWJ1dHRvblwiPntnZW5yZS5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmNvbnRlbnQtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZTY2NDY1LCAjOTE5OGU1KTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudGl0bGUtd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0b3A6IC0xNSU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgNTAlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4ICNlNjY0NjU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5zdWJ0aXRsZSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC43O1xuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5saXN0LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDUsIDFmcik7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxcmVtO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubGlzdC1pdGVtIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmJ1dHRvbi13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmdsb2JhbC1idXR0b24ge1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDEuNzVyZW07XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1cyAycmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDRweCA4cHggIzA1MDA2NjtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFyZW0gMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5nbG9iYWwtYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2hvdmVyQ29sb3J9O1xuICAgICAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5Nb3ZpZXMuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvZ2VucmUvbW92aWUvbGlzdD9hcGlfa2V5PWM3YmQ4MmI5MDJiMDAzZjhkZjI3MDNhZTgxNDE2OWI1Jmxhbmd1YWdlPWVuLVVTYClcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICAgIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2VucmVzIDogZGF0YS5nZW5yZXNcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1vdmllczsiXX0= */\n/*@ sourceURL=/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js */`));\n};\n\nMovies.getInitialProps = async function () {\n  const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`);\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    genres: data.genres\n  };\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js"],"names":["Link","fetch","css","jsx","Nav","Movies","props","hoverColor","genres","map","genre","id","name","getInitialProps","res","data","json","console","log","length"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,UAAU,GAAG,SAAnB;AACA,SACI;AAAA,kDA0E4BA,UA1E5B,aAAe,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA,kDAwEwBA,UAxExB,aAAe,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAuEoBA,UAvEpB,aAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI;AAAA,kDAsEoBA,UAtEpB,aAAa,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,EAGA;AAAA,kDAqEwBA,UArExB,aAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IACd;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA,kDAmEoBJ,UAnEpB,aAA6B,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,EAAE,EAAG,iBAAgBG,KAAK,CAACC,EAAG,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAiEYJ,UAjEZ,aAAa,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,KAAK,CAACE,IAApC,CADJ,CADJ,CADH,CADD,CAHA,CAFJ;AAAA;AAAA,cA0E4BL,UA1E5B;AAAA;AAAA,8qCA0E4BA,UA1E5B;;uFAAA,EADJ;AAgFH,CAlFD;;AAoFAF,MAAM,CAACQ,eAAP,GAAyB,kBAAiB;AACtC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,uGAAF,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AACA,SAAO;AACHX,IAAAA,MAAM,EAAGO,IAAI,CAACP;AADX,GAAP;AAGH,CARD;;AAUA,eAAeH,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core'\nimport Nav from '../components/Nav';\n\nconst Movies = (props) => {\n    const hoverColor = '#08009c';\n    return(\n        <div className=\"content-container\">\n            <Nav/>\n            <div className=\"title-wrapper\">\n                <h1 className=\"title\">Want to stay inside? Have a movie day</h1>\n                <p className=\"subtitle\">Choose a genre to get started</p>\n            <div className=\"list-container\">\n            {props.genres.map((genre) => (\n                <li key={genre.id} className=\"list-item\">\n                    <Link href=\"/movie-genres/[id]\" as={`/movie-genres/${genre.id}`}>\n                        <a className=\"global-button\">{genre.name}</a>\n                    </Link>\n                </li>\n            ))}\n            </div>\n            </div>\n        <style jsx>{`\n            li {\n                list-style: none;\n                display: block;\n            }\n            .content-container {\n                height: 100vh;\n                background: linear-gradient(#e66465, #9198e5);\n                position: relative;\n            }\n            .title-wrapper {\n                display: grid;\n                margin: 0 auto;\n                width: 70%;\n                justify-items: center;\n                text-align: center;\n                position: absolute;\n                left: 50%;\n                top: -15%;\n                transform: translate(-50%, 50%);\n            }\n            .title {\n                color: white;\n                opacity: 1;\n                font-size: 2rem;\n                text-shadow: 2px 2px #e66465;\n            }\n\n            .subtitle {\n                color: white;\n                font-size: 1.5rem;\n                opacity: .7;\n                font-style: italic;\n            }\n            .list-container {\n                display: grid;\n                grid-template-columns:repeat(5, 1fr);\n                grid-column-gap: 1rem;\n                width: 100%;\n            }\n\n            .list-item {\n                margin: 2rem 0;\n            }\n\n            .button-wrapper {\n                margin-top: 1rem;\n            }\n            .global-button {\n                text-decoration: none;\n                padding: 1rem 1.75rem;\n                background-color: blue;\n                color: white;\n                border-radius 2rem;\n                font-weight: 700;\n                box-shadow: 1px 4px 8px #050066;\n                margin: 1rem 1rem;\n            }\n            .global-button:hover {\n                background-color: ${hoverColor};\n            }\n    `}</style>\n        </div>\n    )\n}\n\nMovies.getInitialProps = async function() {\n    const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`)\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return {\n        genres : data.genres\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}