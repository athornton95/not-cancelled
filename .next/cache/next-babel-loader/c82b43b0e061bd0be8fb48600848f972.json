{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core';\nimport Nav from '../components/Nav';\n\nconst Movies = props => {\n  const hoverColor = '#08009c';\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2696408714\", [hoverColor]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), props.genres.map(genre => __jsx(\"li\", {\n    key: genre.id,\n    className: _JSXStyle.dynamic([[\"2696408714\", [hoverColor]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/movie-genres/[id]\",\n    as: `/movie-genres/${genre.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: _JSXStyle.dynamic([[\"2696408714\", [hoverColor]]]) + \" \" + \"global-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, genre.name)))), __jsx(_JSXStyle, {\n    id: \"2696408714\",\n    dynamic: [hoverColor],\n    __self: this\n  }, `.content-container.__jsx-style-dynamic-selector{height:100vh;background:linear-gradient(#e66465,#9198e5);position:relative;}.title-wrapper.__jsx-style-dynamic-selector{display:grid;margin:0 auto;width:50%;justify-items:center;text-align:center;position:absolute;left:50%;top:10%;-webkit-transform:translate(-50%,50%);-ms-transform:translate(-50%,50%);transform:translate(-50%,50%);}.title.__jsx-style-dynamic-selector{color:white;opacity:1;font-size:2rem;}.button-wrapper.__jsx-style-dynamic-selector{margin-top:1rem;}.global-button.__jsx-style-dynamic-selector{-webkit-text-decoration:none;text-decoration:none;padding:1rem 1.75rem;background-color:blue;color:white;border-radius:2rem;font-weight:700;box-shadow:1px 4px 8px #050066;margin:1rem 1rem;}.global-button.__jsx-style-dynamic-selector:hover{background-color:${hoverColor};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4YW5kcmF0aG9ybnRvbi9HaXRodWIvT3V0c2lkZS9ub3QtY2FuY2VsbGVkL3BhZ2VzL21vdmllcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQm9CLEFBRzhCLEFBS0EsQUFXRCxBQU1JLEFBR0ssQUFVeUIsWUFsQnBDLENBaEJtQyxBQUsvQixHQWlCbEIsTUFMbUIsS0FYTCxVQUNXLEFBV3pCLFNBaUJBLElBVnlCLE9BeEJILENBT0EsYUFrQkksSUF4QjFCLENBT3NCLGlCQWtCTixDQWpCSCxTQUNELEVBaUJVLE1BaEJhLGFBaUJmLGdCQUNlLCtCQUNkLGlCQUNyQix5QkFuQkEiLCJmaWxlIjoiL1VzZXJzL2FsZXhhbmRyYXRob3JudG9uL0dpdGh1Yi9PdXRzaWRlL25vdC1jYW5jZWxsZWQvcGFnZXMvbW92aWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IHsgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuaW1wb3J0IE5hdiBmcm9tICcuLi9jb21wb25lbnRzL05hdic7XG5cbmNvbnN0IE1vdmllcyA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGhvdmVyQ29sb3IgPSAnIzA4MDA5Yyc7XG4gICAgcmV0dXJuKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPE5hdi8+XG4gICAgICAgICAgICB7cHJvcHMuZ2VucmVzLm1hcCgoZ2VucmUpID0+IChcbiAgICAgICAgICAgICAgICA8bGkga2V5PXtnZW5yZS5pZH0+XG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvbW92aWUtZ2VucmVzL1tpZF1cIiBhcz17YC9tb3ZpZS1nZW5yZXMvJHtnZW5yZS5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImdsb2JhbC1idXR0b25cIj57Z2VucmUubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgIC5jb250ZW50LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI2U2NjQ2NSwgIzkxOThlNSk7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnRpdGxlLXdyYXBwZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgdG9wOiAxMCU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgNTAlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuYnV0dG9uLXdyYXBwZXIge1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuZ2xvYmFsLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMS43NXJlbTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzIDJyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAxcHggNHB4IDhweCAjMDUwMDY2O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMXJlbSAxcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmdsb2JhbC1idXR0b246aG92ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7aG92ZXJDb2xvcn07XG4gICAgICAgICAgICB9XG4gICAgYH08L3N0eWxlPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbk1vdmllcy5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9nZW5yZS9tb3ZpZS9saXN0P2FwaV9rZXk9YzdiZDgyYjkwMmIwMDNmOGRmMjcwM2FlODE0MTY5YjUmbGFuZ3VhZ2U9ZW4tVVNgKVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBnZW5yZXMgOiBkYXRhLmdlbnJlc1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTW92aWVzOyJdfQ== */\n/*@ sourceURL=/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js */`));\n};\n\nMovies.getInitialProps = async function () {\n  const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`);\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    genres: data.genres\n  };\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js"],"names":["Link","fetch","css","jsx","Nav","Movies","props","hoverColor","genres","map","genre","id","name","getInitialProps","res","data","json","console","log","length"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,UAAU,GAAG,SAAnB;AACA,SACI;AAAA,kDA8C4BA,UA9C5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IACd;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA,kDA2CoBJ,UA3CpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,EAAE,EAAG,iBAAgBG,KAAK,CAACC,EAAG,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAyCYJ,UAzCZ,aAAa,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,KAAK,CAACE,IAApC,CADJ,CADJ,CADH,CAFL;AAAA;AAAA,cA8C4BL,UA9C5B;AAAA;AAAA,0zBA8C4BA,UA9C5B;;uFAAA,EADJ;AAoDH,CAtDD;;AAwDAF,MAAM,CAACQ,eAAP,GAAyB,kBAAiB;AACtC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,uGAAF,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AACA,SAAO;AACHX,IAAAA,MAAM,EAAGO,IAAI,CAACP;AADX,GAAP;AAGH,CARD;;AAUA,eAAeH,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core'\nimport Nav from '../components/Nav';\n\nconst Movies = (props) => {\n    const hoverColor = '#08009c';\n    return(\n        <div>\n            <Nav/>\n            {props.genres.map((genre) => (\n                <li key={genre.id}>\n                    <Link href=\"/movie-genres/[id]\" as={`/movie-genres/${genre.id}`}>\n                        <a className=\"global-button\">{genre.name}</a>\n                    </Link>\n                </li>\n            ))}\n        <style jsx>{`\n            .content-container {\n                height: 100vh;\n                background: linear-gradient(#e66465, #9198e5);\n                position: relative;\n            }\n            .title-wrapper {\n                display: grid;\n                margin: 0 auto;\n                width: 50%;\n                justify-items: center;\n                text-align: center;\n                position: absolute;\n                left: 50%;\n                top: 10%;\n                transform: translate(-50%, 50%);\n            }\n            .title {\n                color: white;\n                opacity: 1;\n                font-size: 2rem;\n            }\n\n            .button-wrapper {\n                margin-top: 1rem;\n            }\n            .global-button {\n                text-decoration: none;\n                padding: 1rem 1.75rem;\n                background-color: blue;\n                color: white;\n                border-radius 2rem;\n                font-weight: 700;\n                box-shadow: 1px 4px 8px #050066;\n                margin: 1rem 1rem;\n            }\n            .global-button:hover {\n                background-color: ${hoverColor};\n            }\n    `}</style>\n        </div>\n    )\n}\n\nMovies.getInitialProps = async function() {\n    const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`)\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return {\n        genres : data.genres\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}