{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/components/TrailFinder.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport UserInput from './UserInput';\nimport Link from 'next/link'; // import WeatherInfo from './WeatherInfo/WeatherInfo'\n\nvar TrailFinder = /*#__PURE__*/function (_Component) {\n  _inherits(TrailFinder, _Component);\n\n  var _super = _createSuper(TrailFinder);\n\n  function TrailFinder() {\n    var _this;\n\n    _classCallCheck(this, TrailFinder);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"findGeoCode\", function _callee(formData) {\n      var searchURL, result, parsedResponse;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              searchURL = \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(formData.city, \",+\").concat(formData.state, \"&key=AIzaSyCxC93pv465QlIoGBJEWgafUpZwTJ_5tPg\");\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 4:\n              result = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 7:\n              parsedResponse = _context.sent;\n\n              // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n              if (result.status === 200) {\n                _this.setState({\n                  lat: parsedResponse.results[0].geometry.location.lat,\n                  lng: parsedResponse.results[0].geometry.location.lng,\n                  city: formData.city,\n                  state: formData.state,\n                  minLength: formData.minLength,\n                  maxLength: formData.maxLength,\n                  difficulty: formData.difficulty\n                });\n              } // console.log(this.state)\n\n\n              _this.findTrails();\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"findTrails\", function _callee2() {\n      var searchURL, result, parsedResponse;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(_this.state.maxLength);\n              _context2.prev = 1;\n              searchURL = \"https://www.hikingproject.com/data/get-trails?lat=\".concat(_this.state.lat, \"&lon=\").concat(_this.state.lng, \"&minLength=\").concat(_this.state.minLength, \"&maxDistance=\").concat(_this.state.maxLength, \"&key=200465360-942e3fb792b81fa531e25b7484cbc0f9\");\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 5:\n              result = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 8:\n              parsedResponse = _context2.sent;\n              console.log(searchURL);\n\n              if (result.status === 200) {\n                if (_this.state.difficulty === '') {\n                  _this.setState({\n                    trails: parsedResponse.trails.filter(function (trails) {\n                      return trails.length < _this.state.maxLength;\n                    })\n                  });\n                } else {\n                  _this.setState({\n                    trails: parsedResponse.trails.filter(function (trails) {\n                      return trails.length < _this.state.maxLength && trails.difficulty === _this.state.difficulty;\n                    })\n                  });\n                }\n              }\n\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    });\n\n    _this.state = {\n      lat: '',\n      lng: '',\n      city: '',\n      state: '',\n      trails: [],\n      minLength: '',\n      maxLength: '',\n      difficulty: ''\n    };\n    return _this;\n  }\n\n  _createClass(TrailFinder, [{\n    key: \"render\",\n    value: function render(formData) {\n      var _this2 = this;\n\n      console.log(\"\".concat(this.state.trails, \" state: trails\"));\n      var trailList = this.state.trails.map(function (trail) {\n        return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, trailList);\n      });\n      console.log(\"\".concat(trailList, \" trailLIST\"));\n      return __jsx(\"div\", {\n        className: \"userInput-Wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"userInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, __jsx(UserInput, {\n        findGeoCode: this.findGeoCode,\n        findTrails: this.findTrails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"trailList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, trailList)));\n    }\n  }]);\n\n  return TrailFinder;\n}(Component);\n\nexport default TrailFinder;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/components/TrailFinder.js"],"names":["React","Component","UserInput","Link","TrailFinder","formData","searchURL","city","state","fetch","result","json","parsedResponse","status","setState","lat","results","geometry","location","lng","minLength","maxLength","difficulty","findTrails","console","log","trails","filter","length","trailList","map","trail","findGeoCode"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;IAGMC,W;;;;;AACF,yBAAa;AAAA;;AAAA;;AACT;;AADS,kEAcC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,cAAAA,SAFI,2GAEyGD,QAAQ,CAACE,IAFlH,eAE2HF,QAAQ,CAACG,KAFpI;AAAA;AAAA,+CAGWC,KAAK,CAACH,SAAD,CAHhB;;AAAA;AAGJI,cAAAA,MAHI;AAAA;AAAA,+CAImBA,MAAM,CAACC,IAAP,EAJnB;;AAAA;AAIJC,cAAAA,cAJI;;AAKV;AACA,kBAAGF,MAAM,CAACG,MAAP,KAAkB,GAArB,EAAyB;AACrB,sBAAKC,QAAL,CAAc;AACVC,kBAAAA,GAAG,EAAEH,cAAc,CAACI,OAAf,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC,QAAnC,CAA4CH,GADvC;AAEVI,kBAAAA,GAAG,EAAEP,cAAc,CAACI,OAAf,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC,QAAnC,CAA4CC,GAFvC;AAGVZ,kBAAAA,IAAI,EAAEF,QAAQ,CAACE,IAHL;AAIVC,kBAAAA,KAAK,EAAEH,QAAQ,CAACG,KAJN;AAKVY,kBAAAA,SAAS,EAAEf,QAAQ,CAACe,SALV;AAMVC,kBAAAA,SAAS,EAAEhB,QAAQ,CAACgB,SANV;AAOVC,kBAAAA,UAAU,EAAEjB,QAAQ,CAACiB;AAPX,iBAAd;AASH,eAhBS,CAiBV;;;AACA,oBAAKC,UAAL;;AAlBU;AAAA;;AAAA;AAAA;AAAA;AAoBNC,cAAAA,OAAO,CAACC,GAAR;;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdD;;AAAA,iEAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACTD,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKjB,KAAL,CAAWa,SAAvB;AADS;AAGHf,cAAAA,SAHG,+DAG8D,MAAKE,KAAL,CAAWO,GAHzE,kBAGoF,MAAKP,KAAL,CAAWW,GAH/F,wBAGgH,MAAKX,KAAL,CAAWY,SAH3H,0BAGoJ,MAAKZ,KAAL,CAAWa,SAH/J;AAAA;AAAA,+CAIYZ,KAAK,CAACH,SAAD,CAJjB;;AAAA;AAIHI,cAAAA,MAJG;AAAA;AAAA,+CAKoBA,MAAM,CAACC,IAAP,EALpB;;AAAA;AAKHC,cAAAA,cALG;AAMTY,cAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;;AACA,kBAAGI,MAAM,CAACG,MAAP,KAAkB,GAArB,EAAyB;AACrB,oBAAG,MAAKL,KAAL,CAAWc,UAAX,KAA0B,EAA7B,EAAgC;AAC5B,wBAAKR,QAAL,CAAc;AACVY,oBAAAA,MAAM,EAAEd,cAAc,CAACc,MAAf,CAAsBC,MAAtB,CAA6B,UAAAD,MAAM;AAAA,6BAAIA,MAAM,CAACE,MAAP,GAAgB,MAAKpB,KAAL,CAAWa,SAA/B;AAAA,qBAAnC;AADE,mBAAd;AAGH,iBAJD,MAIO;AACH,wBAAKP,QAAL,CAAc;AACVY,oBAAAA,MAAM,EAAEd,cAAc,CAACc,MAAf,CAAsBC,MAAtB,CAA6B,UAAAD,MAAM;AAAA,6BAAIA,MAAM,CAACE,MAAP,GAAgB,MAAKpB,KAAL,CAAWa,SAA3B,IAAwCK,MAAM,CAACJ,UAAP,KAAsB,MAAKd,KAAL,CAAWc,UAA7E;AAAA,qBAAnC;AADE,mBAAd;AAGH;AACJ;;AAjBQ;AAAA;;AAAA;AAAA;AAAA;AAmBLE,cAAAA,OAAO,CAACC,GAAR;;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArCA;;AAET,UAAKjB,KAAL,GAAa;AACTO,MAAAA,GAAG,EAAE,EADI;AAETI,MAAAA,GAAG,EAAE,EAFI;AAGTZ,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTkB,MAAAA,MAAM,EAAE,EALC;AAMTN,MAAAA,SAAS,EAAE,EANF;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,UAAU,EAAE;AARH,KAAb;AAFS;AAYZ;;;;2BAgDMjB,Q,EAAS;AAAA;;AAChBmB,MAAAA,OAAO,CAACC,GAAR,WAAe,KAAKjB,KAAL,CAAWkB,MAA1B;AACI,UAAMG,SAAS,GAAG,KAAKrB,KAAL,CAAWkB,MAAX,CAAkBI,GAAlB,CAAsB,UAACC,KAAD,EAAW;AAC/C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMF,SADN,CADJ;AAKH,OANiB,CAAlB;AAOJL,MAAAA,OAAO,CAACC,GAAR,WAAeI,SAAf;AACI,aACI;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAW,QAAA,WAAW,EAAI,KAAKG,WAA/B;AAA4C,QAAA,UAAU,EAAE,KAAKT,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAIA;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,SADL,CAJA,CADJ,CADJ;AAYH;;;;EAnFqB5B,S;;AAuF1B,eAAeG,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport UserInput from './UserInput';\nimport Link from 'next/link'\n// import WeatherInfo from './WeatherInfo/WeatherInfo'\n\n\nclass TrailFinder extends Component {\n    constructor(){\n        super();\n        this.state = {\n            lat: '',\n            lng: '',\n            city: '',\n            state: '',\n            trails: [],\n            minLength: '',\n            maxLength: '',\n            difficulty: '',\n        }\n    }\n\n    findGeoCode = async (formData) => {\n        try{\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyCxC93pv465QlIoGBJEWgafUpZwTJ_5tPg`\n        const result = await fetch(searchURL)\n        const parsedResponse = await result.json();\n        // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n        if(result.status === 200){\n            this.setState({\n                lat: parsedResponse.results[0].geometry.location.lat,\n                lng: parsedResponse.results[0].geometry.location.lng,\n                city: formData.city,\n                state: formData.state,\n                minLength: formData.minLength,\n                maxLength: formData.maxLength,\n                difficulty: formData.difficulty\n            })\n        }\n        // console.log(this.state)\n        this.findTrails();\n        }catch(err){\n            console.log(err)\n        }\n    }\n    findTrails = async () => {\n        console.log(this.state.maxLength)\n        try{\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=${this.state.maxLength}&key=200465360-942e3fb792b81fa531e25b7484cbc0f9`\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        console.log(searchURL);\n        if(result.status === 200){\n            if(this.state.difficulty === ''){\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n                }) \n            } else {\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n                })\n            }\n        }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    render(formData){\n    console.log(`${this.state.trails} state: trails`);\n        const trailList = this.state.trails.map((trail) => {\n            return (\n                <div>\n                    { trailList }\n                </div>\n            )\n        })\n    console.log(`${trailList} trailLIST`);\n        return(\n            <div className = 'userInput-Wrapper'>\n                <div>\n                    <div className = 'userInput'>\n                        <UserInput findGeoCode = {this.findGeoCode} findTrails={this.findTrails}/>\n                    </div>\n                <div className = 'trailList'>\n                    {trailList}\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\n\nexport default TrailFinder;"]},"metadata":{},"sourceType":"module"}