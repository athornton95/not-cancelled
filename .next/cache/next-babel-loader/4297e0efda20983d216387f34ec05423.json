{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core';\nimport Nav from '../components/Nav';\n\nvar Movies = function Movies(props) {\n  var hoverColor = '#08009c';\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"content-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"title-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Have a movie day!\"), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"subtitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Choose a genre to get started\"), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"list-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.genres.map(function (genre) {\n    return __jsx(\"li\", {\n      key: genre.id,\n      className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"list-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/movie-genres/[id]\",\n      as: \"/movie-genres/\".concat(genre.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      className: _JSXStyle.dynamic([[\"2257906599\", [hoverColor]]]) + \" \" + \"global-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, genre.name)));\n  }))), __jsx(_JSXStyle, {\n    id: \"2257906599\",\n    dynamic: [hoverColor],\n    __self: _this\n  }, \"li.__jsx-style-dynamic-selector{list-style:none;display:block;}.content-container.__jsx-style-dynamic-selector{height:100vh;background:linear-gradient(#e66465,#9198e5);position:relative;}.title-wrapper.__jsx-style-dynamic-selector{display:grid;margin:0 auto;width:80%;justify-items:center;text-align:center;position:absolute;left:50%;top:-15%;-webkit-transform:translate(-50%,50%);-ms-transform:translate(-50%,50%);transform:translate(-50%,50%);}.title.__jsx-style-dynamic-selector{color:white;opacity:1;font-size:2rem;}.list-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(5,1fr);grid-column-gap:1rem;}.list-item.__jsx-style-dynamic-selector{margin:2rem 0;}.button-wrapper.__jsx-style-dynamic-selector{margin-top:1rem;}.global-button.__jsx-style-dynamic-selector{-webkit-text-decoration:none;text-decoration:none;padding:1rem 1.75rem;background-color:blue;color:white;border-radius:2rem;font-weight:700;box-shadow:1px 4px 8px #050066;margin:1rem 1rem;}.global-button.__jsx-style-dynamic-selector:hover{background-color:\".concat(hoverColor, \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4YW5kcmF0aG9ybnRvbi9HaXRodWIvT3V0c2lkZS9ub3QtY2FuY2VsbGVkL3BhZ2VzL21vdmllcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Qm9CLEFBR2lDLEFBSUgsQUFLQSxBQVdELEFBTUMsQUFNQyxBQUlFLEFBR0ssQUFVeUIsWUE1QnBDLENBaEJtQyxBQUsvQixBQWlCc0IsQ0FNeEMsRUFoQ2tCLEFBb0NsQixNQWZtQixLQVhMLEdBVGQsT0FVeUIsQUFXekIsU0EyQkEsR0F0QnlCLENBWUEsT0FsQ0gsQ0FPQSxZQWdCdEIsQ0FZMEIsSUFsQzFCLENBT3NCLGlCQTRCTixDQTNCSCxTQUNBLEVBMkJTLE9BMUJhLFlBMkJmLGdCQUNlLCtCQUNkLGlCQUNyQiwwQkE3QkEiLCJmaWxlIjoiL1VzZXJzL2FsZXhhbmRyYXRob3JudG9uL0dpdGh1Yi9PdXRzaWRlL25vdC1jYW5jZWxsZWQvcGFnZXMvbW92aWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IHsgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuaW1wb3J0IE5hdiBmcm9tICcuLi9jb21wb25lbnRzL05hdic7XG5cbmNvbnN0IE1vdmllcyA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGhvdmVyQ29sb3IgPSAnIzA4MDA5Yyc7XG4gICAgcmV0dXJuKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8TmF2Lz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGUtd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0aXRsZVwiPkhhdmUgYSBtb3ZpZSBkYXkhPC9oMT5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJzdWJ0aXRsZVwiPkNob29zZSBhIGdlbnJlIHRvIGdldCBzdGFydGVkPC9wPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAge3Byb3BzLmdlbnJlcy5tYXAoKGdlbnJlKSA9PiAoXG4gICAgICAgICAgICAgICAgPGxpIGtleT17Z2VucmUuaWR9IGNsYXNzTmFtZT1cImxpc3QtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL21vdmllLWdlbnJlcy9baWRdXCIgYXM9e2AvbW92aWUtZ2VucmVzLyR7Z2VucmUuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJnbG9iYWwtYnV0dG9uXCI+e2dlbnJlLm5hbWV9PC9hPlxuICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuY29udGVudC1jb250YWluZXIge1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNlNjY0NjUsICM5MTk4ZTUpO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC50aXRsZS13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgICAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgIHRvcDogLTE1JTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCA1MCUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5saXN0LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDUsIDFmcik7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxcmVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubGlzdC1pdGVtIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmJ1dHRvbi13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmdsb2JhbC1idXR0b24ge1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDEuNzVyZW07XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1cyAycmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDRweCA4cHggIzA1MDA2NjtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDFyZW0gMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5nbG9iYWwtYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2hvdmVyQ29sb3J9O1xuICAgICAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5Nb3ZpZXMuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvZ2VucmUvbW92aWUvbGlzdD9hcGlfa2V5PWM3YmQ4MmI5MDJiMDAzZjhkZjI3MDNhZTgxNDE2OWI1Jmxhbmd1YWdlPWVuLVVTYClcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICAgIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2VucmVzIDogZGF0YS5nZW5yZXNcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1vdmllczsiXX0= */\\n/*@ sourceURL=/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js */\")));\n};\n\nMovies.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            genres: data.genres\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/alexandrathornton/Github/Outside/not-cancelled/pages/movies.js"],"names":["Link","fetch","css","jsx","Nav","Movies","props","hoverColor","genres","map","genre","id","name","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,MAAMC,UAAU,GAAG,SAAnB;AACA,SACI;AAAA,kDAkE4BA,UAlE5B,aAAe,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA,kDAgEwBA,UAhExB,aAAe,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDA+DoBA,UA/DpB,aAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA,kDA8DoBA,UA9DpB,aAAa,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,EAGA;AAAA,kDA6DwBA,UA7DxB,aAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA,oDA2DoBJ,UA3DpB,aAA6B,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,oBAAX;AAAgC,MAAA,EAAE,0BAAmBG,KAAK,CAACC,EAAzB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,oDAyDYJ,UAzDZ,aAAa,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BG,KAAK,CAACE,IAApC,CADJ,CADJ,CADc;AAAA,GAAjB,CADD,CAHA,CAFJ;AAAA;AAAA,cAkE4BL,UAlE5B;AAAA;AAAA,4iCAkE4BA,UAlE5B,8iJADJ;AAwEH,CA1ED;;AA4EAF,MAAM,CAACQ,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHZ,KAAK,yGADF;;AAAA;AACfa,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAIrBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJqB,2CAKd;AACHX,YAAAA,MAAM,EAAGQ,IAAI,CAACR;AADX,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAUA,eAAeH,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { css, jsx } from '@emotion/core'\nimport Nav from '../components/Nav';\n\nconst Movies = (props) => {\n    const hoverColor = '#08009c';\n    return(\n        <div className=\"content-container\">\n            <Nav/>\n            <div className=\"title-wrapper\">\n                <h1 className=\"title\">Have a movie day!</h1>\n                <p className=\"subtitle\">Choose a genre to get started</p>\n            <div className=\"list-container\">\n            {props.genres.map((genre) => (\n                <li key={genre.id} className=\"list-item\">\n                    <Link href=\"/movie-genres/[id]\" as={`/movie-genres/${genre.id}`}>\n                        <a className=\"global-button\">{genre.name}</a>\n                    </Link>\n                </li>\n            ))}\n            </div>\n            </div>\n        <style jsx>{`\n            li {\n                list-style: none;\n                display: block;\n            }\n            .content-container {\n                height: 100vh;\n                background: linear-gradient(#e66465, #9198e5);\n                position: relative;\n            }\n            .title-wrapper {\n                display: grid;\n                margin: 0 auto;\n                width: 80%;\n                justify-items: center;\n                text-align: center;\n                position: absolute;\n                left: 50%;\n                top: -15%;\n                transform: translate(-50%, 50%);\n            }\n            .title {\n                color: white;\n                opacity: 1;\n                font-size: 2rem;\n            }\n\n            .list-container {\n                display: grid;\n                grid-template-columns:repeat(5, 1fr);\n                grid-column-gap: 1rem;\n            }\n\n            .list-item {\n                margin: 2rem 0;\n            }\n\n            .button-wrapper {\n                margin-top: 1rem;\n            }\n            .global-button {\n                text-decoration: none;\n                padding: 1rem 1.75rem;\n                background-color: blue;\n                color: white;\n                border-radius 2rem;\n                font-weight: 700;\n                box-shadow: 1px 4px 8px #050066;\n                margin: 1rem 1rem;\n            }\n            .global-button:hover {\n                background-color: ${hoverColor};\n            }\n    `}</style>\n        </div>\n    )\n}\n\nMovies.getInitialProps = async function() {\n    const res = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=c7bd82b902b003f8df2703ae814169b5&language=en-US`)\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return {\n        genres : data.genres\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}