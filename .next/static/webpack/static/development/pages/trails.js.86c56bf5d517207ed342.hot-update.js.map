{"version":3,"file":"static/webpack/static/development/pages/trails.js.86c56bf5d517207ed342.hot-update.js","sources":["webpack:///./components/TrailFinder.js"],"sourcesContent":["import React, {Component} from 'react';\nimport UserInput from './UserInput';\nimport Link from 'next/link'\n// import WeatherInfo from './WeatherInfo/WeatherInfo'\n\n\nclass TrailFinder extends Component {\n    constructor(){\n        super();\n        this.state = {\n            lat: '',\n            lng: '',\n            city: '',\n            state: '',\n            trails: [],\n            minLength: '',\n            maxLength: '',\n            difficulty: '',\n        }\n    }\n\n    findGeoCode = async (formData) => {\n        try{\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyCxC93pv465QlIoGBJEWgafUpZwTJ_5tPg`\n        const result = await fetch(searchURL)\n        const parsedResponse = await result.json();\n        // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n        if(result.status === 200){\n            this.setState({\n                lat: parsedResponse.results[0].geometry.location.lat,\n                lng: parsedResponse.results[0].geometry.location.lng,\n                city: formData.city,\n                state: formData.state,\n                minLength: formData.minLength,\n                maxLength: formData.maxLength,\n                difficulty: formData.difficulty\n            })\n        }\n        // console.log(this.state)\n        this.findTrails();\n        }catch(err){\n            console.log(err)\n        }\n    }\n    findTrails = async () => {\n        console.log(this.state.maxLength)\n        try{\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=${this.state.maxLength}&key=200465360-942e3fb792b81fa531e25b7484cbc0f9`\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        console.log(searchURL);\n        if(result.status === 200){\n            if(this.state.difficulty === ''){\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n                }) \n            } else {\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n                })\n            }\n        }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    render(formData){\n    console.log(this.state.trails);\n        if(this.state.trails.length < 1){\n            return (\n                <div>\n                    <h3>So sorry, there are no trails that meet your criteria! Try widening your search.</h3>\n                </div>\n            )\n        } else {\n        const trailList = this.state.trails.map((trail) => {\n            return (\n                <div>\n                   <div key=\"trail.id\" className=\"card\">\n                   <div className=\"card-content\">\n                        <h2>{trail.name}</h2> \n                        <p>{trail.location}</p> \n                        <p>Length: {trail.length} miles</p>\n                        <p>{trail.summary}</p>\n                        <p>Current conditions: {trail.conditionDetails} | Last updated: {trail.conditionDate}</p>\n                    </div>\n                     </div>\n                     <style jsx>{`\n                        h2 {\n                            border-bottom: 1px solid;\n                        }\n                        .card {\n                            background-color: white;\n                            width: 100%;\n                            border-radius: 1rem;\n                            box-shadow: 1px 4px 8px #050066;\n                            padding: .25rem;\n                            min-height: 18rem;\n                        }\n                        .card-content {\n                            margin: 2rem;\n                            text-align: left;\n                        }\n\n                        .card:hover {\n                            transform: translateY(-3px);\n                        }\n                    `}</style>\n                </div>\n            )\n        })\n        return(\n            <div className=\"trail-container\">\n                <div className=\"trail-info-wrapper\">\n                    <div className = 'userInput'>\n                        <UserInput findGeoCode = {this.findGeoCode} findTrails={this.findTrails}/>\n                    </div>\n                    <div className = 'trail-list'>\n                        { trailList }\n                    </div>\n                </div>\n                <style jsx>{`\n                    .trail-container {\n                        display: grid;\n                    }\n\n                    .trail-list {\n                        display: grid;\n                        grid-template-columns: repeat(4, 1fr);\n                        grid-column-gap: 1.5rem;\n                        grid-row-gap: 1.5rem;\n                        margin-top: 1rem;\n                    }\n\n                    .trail-info-wrapper {\n                        text-align: center;\n                        margin-top: 10rem;\n                    }\n                `}</style>\n            </div>\n        )\n                }\n    }\n}\n\n\nexport default TrailFinder;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAoBA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAqCA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAlBA;AAAA;AACA;AADA;AAAA;AAAA;AAmBA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApiCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AA6BA;AACA;;;;AAzIA;AACA;AA4IA;;;;A","sourceRoot":""}