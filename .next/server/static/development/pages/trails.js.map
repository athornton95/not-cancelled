{"version":3,"file":"static/development/pages/trails.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Nav.js","webpack:///./components/TrailFinder.js","webpack:///./components/UserInput.js","webpack:///./pages/trails.js","webpack:///./theme/theme.js","webpack:///external \"@emotion/core\"","webpack:///external \"@material-ui/core/colors\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import theme from '../theme/theme';\n\nconst Nav = () => {\n    return(\n    <div className=\"header-wrapper\">\n        <h2 className=\"header-title\">#notcancelled</h2>\n\n        <style jsx>{`\n            .header-wrapper {\n                position: sticky;\n                background-color: ${theme.palette.primary.main};\n                width: 100vw;\n                height: 4rem;\n                display: grid;\n                padding: 0 2rem;\n            }\n            .header-title {\n                color: white;\n                opacity: .7;  \n            }\n        `}</style>\n    </div>\n);\n};\n  \nexport default Nav;","import React, {Component} from 'react';\nimport UserInput from './UserInput';\n\n\nclass TrailFinder extends Component {\n    constructor(){\n        super();\n        this.state = {\n            lat: '',\n            lng: '',\n            city: '',\n            state: '',\n            trails: [],\n            minLength: '',\n            maxLength: '',\n            difficulty: '',\n        }\n    }\n\n    findGeoCode = async (formData) => {\n        try{\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyAHhKGOfTAvy-VlwP5IryEgZCzTS5WMH48`\n        const result = await fetch(searchURL)\n        const parsedResponse = await result.json();\n        // console.log(`${parsedResponse} is the parsed response for findGeoCode`);\n        if(result.status === 200){\n            this.setState({\n                lat: parsedResponse.results[0].geometry.location.lat,\n                lng: parsedResponse.results[0].geometry.location.lng,\n                city: formData.city,\n                state: formData.state,\n                minLength: formData.minLength,\n                maxLength: formData.maxLength,\n                difficulty: formData.difficulty\n            })\n        }\n        // console.log(this.state)\n        this.findTrails();\n        }catch(err){\n            console.log(err)\n        }\n    }\n    findTrails = async () => {\n        console.log(this.state.maxLength)\n        try{\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=${this.state.maxLength}&key=200727642-2406c0de25c5407cdeb3dcd60053bcd4`\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        console.log(searchURL);\n        if(result.status === 200){\n            if(this.state.difficulty === ''){\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n                }) \n            } else {\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n                })\n            }\n        }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    render(formData){\n    console.log(this.state.trails);\n        const trailList = this.state.trails.map((trail) => {\n            return (\n                <div>\n                   <div key=\"trail.id\" className=\"card\">\n                   <a href={trail.url} target=\"_blank\"><div className=\"card-content\">\n                        <h2>{trail.name}</h2> \n                        <p>{trail.location}</p> \n                        <p>Length: {trail.length} miles</p>\n                        <p>{trail.summary}</p>\n                        <p>Current conditions: {trail.conditionDetails} | Last updated: {trail.conditionDate}</p>\n                    </div></a>\n                     </div>\n                     <style jsx>{`\n                        h2 {\n                            border-bottom: 1px solid;\n                        }\n                        a {\n                            text-decoration: none;\n                            color: black;\n                        }\n                        \n                        .card {\n                            background-color: white;\n                            width: 100%;\n                            border-radius: 1rem;\n                            box-shadow: 1px 4px 8px #050066;\n                            padding: .25rem;\n                            min-height: 18rem;\n                        }\n                        .card-content {\n                            margin: 2rem;\n                            text-align: left;\n                        }\n\n                        .card:hover {\n                            transform: translateY(-3px);\n                        }\n                    `}</style>\n                </div>\n            )\n        })\n        return(\n            <div className=\"trail-container\">\n                <div className=\"trail-info-wrapper\">\n                    <div className = 'userInput'>\n                        <UserInput findGeoCode = {this.findGeoCode} findTrails={this.findTrails}/>\n                    </div>\n                    <div className = 'trail-list'>\n                        { trailList }\n                    </div>\n                </div>\n                <style jsx>{`\n                    .trail-container {\n                        display: grid;\n                    }\n\n                    .trail-list {\n                        display: grid;\n                        grid-template-columns: repeat(4, 1fr);\n                        grid-column-gap: 1.5rem;\n                        grid-row-gap: 1.5rem;\n                        margin-top: 1rem;\n                    }\n\n                    .trail-info-wrapper {\n                        text-align: center;\n                        margin-top: 10rem;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\n\nexport default TrailFinder;","import React, {Component} from 'react';\nimport { css, jsx } from '@emotion/core';\nimport theme from '../theme/theme';\n\nclass UserInput extends Component {\n    constructor(){\n        super();\n        this.state = {\n            city: '',\n            state: '',\n            minLength: '',\n            maxLength: '',\n            difficulty: ''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.findGeoCode(this.state)\n    }\n    render(){\n        const hoverColor = '#08009c';\n        return (\n            <div className=\"user-input-form\">\n                <form onSubmit = {this.handleSubmit} >\n                    <div className=\"text-field\">\n                        <input onChange = {this.handleChange} className = \"formInput\" placeholder = 'City' type = \"text\" name = \"city\"/>\n                    </div>\n                    <div>\n                        <input onChange = {this.handleChange} className = \"formInput\" placeholder = 'State' type = \"text\" name = \"state\"/>\n                    </div>\n                    <div>\n                        <select onChange = {this.handleChange} className = \"formInput select\" value = {this.state.minLength}name = 'minLength'>\n                            <option value = '0'>Min Miles</option>\n                            <option value = '1'>1 Miles</option>\n                            <option value = '5'>5 Miles</option>\n                            <option value = \"10\">10 Miles</option>\n                        </select>\n                    </div>\n                    <div>\n                        <select onChange = {this.handleChange} className = \"formInput select\" value = {this.state.maxLength} name = 'maxLength'>\n                            <option value = ''>Max Miles</option>\n                            <option value = '5'>5 Miles</option>\n                            <option value = '10'>10 Miles</option>\n                            <option value = \"15\">15 Miles</option>\n                            <option value = \"20\">20 Miles</option>\n                            <option value = \"100\">No Max</option>\n                        </select>\n                    </div>\n                    <div>\n                        <select onChange = {this.handleChange} className = \"formInput select\" value = {this.state.difficulty} name = 'difficulty'>\n                            <option value = ''>Difficulty</option>\n                            <option value = 'green'>Novice</option>\n                            <option value = 'greenBlue'>Proficient</option>\n                            <option value = \"blue\">Strenuous</option>\n                            <option value = \"blueBlack\">Very strenuous</option>\n                            <option value = \"black\">You're Wild</option>\n                            <option value = ''>All Difficulties</option>\n                        </select>\n                    </div>\n                    <div>\n                        <button type = \"submit\" className = \"global-button\">Find me trails</button>\n                    </div>\n                </form>\n                <style jsx>{`\n                    .formInput{\n                        border-color: ${theme.palette.primary.main};\n                        padding: 5px 10px;\n                        margin: 5px;\n                        width: 37vh;\n                        font-size: 20px;\n                    }\n                    .select {\n                        padding: 5px 10px;\n                    }\n                    .global-button {\n                        text-decoration: none;\n                        padding: 1rem 1.75rem;\n                        background-color: ${theme.palette.primary.main};\n                        color: white;\n                        border-radius 2rem;\n                        font-weight: 700;\n                        box-shadow: 1px 4px 8px #050066;\n                        margin: 1rem 1rem;\n                        border: none;\n                        font-size: .8rem;\n                    }\n                    .global-button:hover {\n                        background-color: ${hoverColor};\n                    }\n                    textarea:focus, input:focus{\n                        outline: none;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\n\nexport default UserInput;","import TrailFinder from '../components/TrailFinder';\nimport Nav from '../components/Nav';\nimport { css, jsx } from '@emotion/core'\nimport theme from '../theme/theme';\n\nconst Trails = () => {\n    const hoverColor = '#08009c';\n    return(\n        <div className=\"content-container\">\n            <Nav/>\n            <div className=\"wrapper\">\n                <div className=\"title-wrapper\">\n                    <h1 className=\"title\">Get outside and take a hike!</h1>\n                    <p className=\"subtitle\">Enter your location and hike style preferences to get inspired!</p>\n                </div>\n                <TrailFinder />\n            </div>\n            <style jsx>{`\n            li {\n                list-style: none;\n                display: block;\n            }\n            .wrapper {\n                display: grid;\n                max-width: 100%;\n                margin: 2rem;\n            }\n            .content-container {\n                min-height: 100vh;\n                background: linear-gradient(#e66465, #9198e5);\n                position: relative;\n            }\n            .title-wrapper {\n                display: grid;\n                margin: 0 auto;\n                margin-top: -5rem;\n                width: 70%;\n                justify-items: center;\n                text-align: center;\n                position: absolute;\n                left: 50%;\n                transform: translate(-50%, 50%);\n            }\n            .title {\n                color: white;\n                opacity: 1;\n                font-size: 2rem;\n                text-shadow: 2px 2px #e66465;\n            }\n\n            .subtitle {\n                color: white;\n                font-size: 1.5rem;\n                opacity: .7;\n                font-style: italic;\n            }\n            .list-container {\n                display: grid;\n                grid-template-columns:repeat(5, 1fr);\n                grid-column-gap: 1rem;\n                width: 100%;\n            }\n\n            .list-item {\n                margin: 2rem 0;\n            }\n\n            .button-wrapper {\n                margin-top: 1rem;\n            }\n            .global-button {\n                text-decoration: none;\n                padding: 1rem 1.75rem;\n                background-color: ${theme.palette.primary.main};\n                color: white;\n                border-radius 2rem;\n                font-weight: 700;\n                box-shadow: 1px 4px 8px #050066;\n                margin: 1rem 1rem;\n            }\n            .global-button:hover {\n                background-color: ${hoverColor};\n            }\n    `}</style>\n        </div>\n        )\n}\n\nexport default Trails;\n\n\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0000ff',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: 'white',\n    }\n  },\n});\n\nexport default theme;","module.exports = require(\"@emotion/core\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"react\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;;AAAA;AAmBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AArCA;AAsCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AA+CA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAsCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AA6BA;AACA;AAvIA;AACA;AAyIA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAWA;AACA;AADA;AAGA;AACA;AAfA;AAgBA;AACA;AACA;AACA;AAjtCA;AAAA;AAAA;AAAA;;AAAA;AAyEA;AACA;AAjGA;AACA;AAmGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;;AAAA;AA8EA;AACA;AACA;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AADA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}